plot(factor(m2$Observation), m2$max))
plot(factor(m2$Observation), m2$max)
one_way <- aov(Value ~ Distance+Error((Observation)/Distance), data=m2)
plot(m2$Coefficient, m2$max)
one_way <- aov(Value ~ Distance+Error((Observation)/Distance), data=m2)
plot(m2$Coefficient, m2$max)
one_way <- aov(max ~ Distance+Error((Observation)/Distance), data=m2)
summary(one_way)
plot(m2$Distance, m2$max)
one_way <- aov(max ~ Distance+Error((Observation)/Distance), data=m2)
summary(one_way)
plot(m2$min, m2$max)
one_way <- aov(max ~ min), data=m2)
plot(m2$min, m2$max)
one_way <- aov(max ~ min, data=m2)
summary(one_way)
plot(m2$min, m2$max)
one_way <- aov(max ~ min, data=m2)
abline(one_way)
summary(one_way)
setwd(path)
path <- "/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week 3/example_csv/"
setwd(path)
close_on <- read.csv("MFCCs_close_on.csv")
setwd(path)
mfccs <- read.csv("openSMILE_emobase_MFCCs.csv")
m2 <- cast(data=mfccs, formula = Distance + Screen + Coefficient ~ Functional)
m2$Observation <- paste(m2$Coefficient, m2$Screen, sep="_")
View(mfccs)
setwd(path)
mfccs <- read.csv("openSMILE_emobase_MFCCs.csv")
m2 <- cast(data=mfccs, formula = Distance + Screen + Coefficient ~ Functional)
View(m2)
plot(m2$Distance, m2$max)
one_way <- aov(max ~ min, data=m2)
abline(one_way)
summary(one_way)
plot(factor(m2$Distance), m2$max)
one_way <- aov(max ~ min, data=m2)
abline(one_way)
summary(one_way)
interaction.plot(m2$Distance, m2$max)
interaction.plot(x.factor=m2$Distance, response=m2$max)
one_way <- aov(max ~ min, data=m2)
interaction.plot(x.factor=m2$Distance, response=m2$max, fun=one_way)
one_way <- aov(max ~ min, data=m2)
interaction.plot(x.factor=m2$Distance, response=m2$max, fun=mean)
one_way <- aov(max ~ min, data=m2)
interaction.plot(x.factor=m2$Distance, response=m2$Coefficient, fun=mean)
one_way <- aov(max ~ min, data=m2)
interaction.plot(x.factor=m2$Distance, trace.factor=m2$Coefficient, response=m2$max, fun=mean)
summary(one_way)
one_way <- aov(max ~ min, data=m2)
interaction.plot(x.factor=m2$Coefficient, trace.factor=m2$Distance, response=m2$max, fun=mean)
summary(one_way)
one_way <- aov(max ~ min, data=m2)
interaction.plot(x.factor=m2$Coefficient, trace.factor=m2$Distance, response=m2$max, fun=max)
summary(one_way)
one_way <- aov(max ~ min, data=m2)
plot(one_way)
summary(one_way)
one_way <- aov(max ~ Distance, data=m2)
plot(one_way)
summary(one_way)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(distance_to_max)
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance + Error(Screen/Distance), data=m2)
plot(distance_to_max)
distance_to_max <- aov(max ~ Distance + Error(Screen/Distance), data=m2)
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance + Error(Screen/Distance), data=m2)
plot(distance_to_max)
distance_to_max <- aov(max ~ Distance + Error(Screen/Distance), data=m2)
distance_to_max
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(distance_to_max)
summary(distance_to_max)
factors(m2$Distance)
m2$Distance
levels(m2$Distance)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(levels(m2$Distance), m2$max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2$Distance, m2$max)
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2$max)
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2$Coefficient, m2$max)
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max)
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max)
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max)
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20)
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max) ~ m2$Distance == "close", ]$Coefficient)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max) ~ m2[m2$Distance == "close", ]$Coefficient)
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max) ~ m2[m2$Distance == "close", ]$Coefficient, col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
summary(distance_to_max)
path <- "/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week 3/example_csv/"
setwd(path)
close_on <- read.csv("MFCCs_close_on.csv")
plot(close_on$max)
plot(close_on$maxPos, close_on$max)
plot(close_on$max, main="MFCC maximum values: microphone close, pop screen on", xlab = "coefficient", ylab = "maximum value")
plot(close_on$maxPos, close_on$max, main = "MFCC maximum value: microphone close, pop screen on", xlab = "position of maximum value (frames)", ylab = "maximum value")
plot(close_on$max, main="MFCC maximum values: microphone close, pop screen on", xlab = "coefficient", ylab = "maximum value", xlim=c(-12, 12), ylim=c(0-max(close_on$max), max(close_on$max)), pch=13)
plot(close_on$max, main="MFCC maximum values: microphone close, pop screen on", xlab = "coefficient", ylab = "maximum value", type="n")
text(close_on$max, labels=close_on$maxPos)
plot(close_on$maxPos, close_on$max, main = "MFCC maximum value: microphone close, pop screen on", xlab = "position of maximum value (frames)", ylab = "maximum value", type="n")
text(close_on$maxPos, close_on$max, labels=close_on$Coefficient)
plot(c(1, 3, 2))
abline(0, 1)
plot(close_on$max, main="MFCC maximum values: microphone close, pop screen on", xlab = "coefficient", ylab = "maximum value", pch=13)
abline(lm(close_on$max ~ close_on$Coefficient))
plot(close_on$maxPos, close_on$max, main = "MFCC maximum value: microphone close, pop screen on", xlab = "position of maximum value (frames)", ylab = "maximum value", type="n")
text(close_on$maxPos, close_on$max, labels=close_on$Coefficient)
abline(lm(close_on$max ~ close_on$maxPos))
lm(close_on$max ~ close_on$Coefficient)
lm(close_on$max ~ close_on$maxPos)
path <- "/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week 3/example_csv/"
setwd(path)
far_off <- read.csv("MFCCs_far_off.csv")
plot(close_on$maxPos, close_on$max, main = "MFCC maximum value", sub="close & screen on vs far & screen off", xlab = "position of maximum value (frames)", ylab = "maximum value", type="n", xlim=c(min(c(close_on$maxPos, far_off$maxPos)), c(max(c(close_on$maxPos, far_off$maxPos)))), ylim=c(min(c(close_on$max, far_off$max)), c(max(c(close_on$max, far_off$max)))))
text(close_on$maxPos, close_on$max, labels=close_on$Coefficient)
abline(lm(close_on$max ~ close_on$maxPos))
points(far_off$maxPos, far_off$max, type="n")
text(far_off$maxPos, far_off$max, labels=far_off$Coefficient, col="blue")
abline(lm(far_off$max ~ far_off$maxPos), col = "blue")
plot(close_on$maxPos, close_on$max, main = "MFCC maximum value", xlab = "position of maximum value (frames)", ylab = "maximum value", type="n", xlim=c(min(c(close_on$maxPos, far_off$maxPos)), c(max(c(close_on$maxPos, far_off$maxPos)))), ylim=c(min(c(close_on$max, far_off$max)), c(max(c(close_on$max, far_off$max)))))
text(close_on$maxPos, close_on$max, labels=close_on$Coefficient)
abline(lm(close_on$max ~ close_on$maxPos))
points(far_off$maxPos, far_off$max, type="n")
text(far_off$maxPos, far_off$max, labels=far_off$Coefficient, col="blue")
abline(lm(far_off$max ~ far_off$maxPos), col = "blue")
legend(320, 42, c("close & screen on", "far & screen off"), pch = 13, col = c("black", "blue"), text.col = c("black", "blue"))
plot(close_on$maxPos, close_on$max, main = "MFCC maximum value: microphone close, pop screen on", xlab = "position of maximum value (frames)", ylab = "maximum value", type="n")
text(close_on$maxPos, close_on$max, labels=close_on$Coefficient)
lines(close_on$maxPos, close_on$max)
hamming <- read.csv("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week 3/example_csv/hamming.csv")
dotchart(hamming$Hamming.Distance, labels = hamming$Screen, groups=hamming$Distance, lcolor="purple", main="Microphone Placement", sub="grouped by physical distance", xlab="Hamming Distance", ylab="Pop Screen", xlim=c(0,max(hamming$Hamming.Distance)), pch=4, color="purple")
attach(mtcars) # Sample dataset for cars
head(mtcars) # Show the first 6 rows of mtcars
plot(mtcars$wt, mtcars$mpg, main = "Auto Fuel Efficiency vs. Weight",
xlab = "Weight (tons)", ylab = "Fuel Efficieny (Miles per Gallon)",
xlim = c(0, 6), ylim = c(0, 40), pch = 21)
abline(lm(mtcars$mpg ~ mtcars$wt), col = "blue")
mtcars_lm <- lm(mtcars$mpg ~ mtcars$wt)
summary(mtcars_lm)
sm_kbit = read.csv("/Volumes/data/Research/CDB/RA Didactics/Programming_Jan2017/Week 3/example_csv/SM_EEG_KBIT.csv")
names(sm_kbit)[names(sm_kbit) == "KBIT.Verbal.Standard.Score"] = "KBIT_Verbal"
names(sm_kbit)[names(sm_kbit) == "KBIT.Nonverbal.Standard.Score"] = "KBIT_Nonverbal"
names(sm_kbit)[names(sm_kbit) == "KBIT.IQ.Standard.Score"] = "KBIT_IQ"
t.test(sm_kbit$KBIT_Verbal ~ sm_kbit$SM_dx)
t.test(sm_kbit$KBIT_Verbal, sm_kbit$KBIT_Nonverbal, paired = TRUE) # Note: If the argument "paired" is not specified, it defaults to FALSE
boxplot(KBIT_Verbal ~ SM_dx, data = sm_kbit)
png(filename = "/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week 3/KBIT_boxplot_modified.png") # Specify where to save image as .png
boxplot(KBIT_Verbal ~ SM_dx, data = sm_kbit, main = "KBIT Verbal Scores",
xlab = "SM Diagnosis", ylab = "KBIT Verbal Score",
ylim = c(50, 150), col = c("#0067A0", "#919d9d"))
dev.off()
setwd(path)
mfccs <- read.csv("openSMILE_emobase_MFCCs.csv")
m2 <- cast(data=mfccs, formula = Distance + Screen + Coefficient ~ Functional)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max) ~ m2[m2$Distance == "close", ]$Coefficient, col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
summary(distance_to_max)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max) ~ m2[m2$Distance == "close", ]$Coefficient, col="black")
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max) ~ m2[m2$Distance == "close", ]$Coefficient, col="red")
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
summary(lm(m2[m2$Distance == "close", ]$max) ~ m2[m2$Distance == "close", ]$Coefficient)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
summary(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient))
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient))
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient, col="black"))
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient, col="grey"))
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient, col="black"))
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient, col="gray"))
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient, col="black"))
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient, col="red"))
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient), col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient), col="grey")
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient), col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient), col="grey")
abline(distance_to_max, color="red")
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient), col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient), col="grey")
abline(distance_to_max, color="blue")
summary(distance_to_max)
distance_to_max <- aov(max ~ Distance, data=m2)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient), col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient), col="grey")
summary(distance_to_max)
plot(distance_to_max)
View(m2)
dands_to_min <- aov(max ~ Distance*Screen, data=m2)
ds_to_min <- aov(max ~ Distance*Screen, data=m2)
summary(ds_to_min)
distance_to_max <- aov(max ~ Distance, data=m2)
summary(distance_to_max)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19)
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient), col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient), col="grey")
plot(distance_to_max)
plot(ds_to_min)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient), col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient), col="grey")
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient), col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient), col="grey")
legend(0, 42, c("close", "far"), pch = c(19, 20), col = c("black", "grey"), text.col = c("black", "grey"))
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient), col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient), col="grey")
legend(1, 42, c("close", "far"), pch = c(19, 20), col = c("black", "grey"), text.col = c("black", "grey"))
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient), col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient), col="grey")
legend(0.5, 42, c("close", "far"), pch = c(19, 20), col = c("black", "grey"), text.col = c("black", "grey"))
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient), col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient), col="grey")
legend(0.5, 42, c("close", "far"), pch = c(19, 20), col = c("black", "grey"), text.col = c("black", "grey"), title="Distance")
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient), col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient), col="grey")
legend(0.5, 42, c("close", "far"), pch = c(19, 20), col = c("black", "grey"), text.col = c("black", "grey"), title="Mic Distance")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen = "on", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient), col="black")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient), col="black")
points(m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=21, col="green")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="green")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient), col="black")
points(m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=21, col="green")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="green")
points(m2[m2$Distance == "far" & m2$Screen == "off", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=1, col="blue")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="blue")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient), col="black")
points(m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=21, col="green")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="green")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="grey")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=1, col="blue")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="blue")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient), col="black")
points(m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=21, col="green")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="green")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "far" & m2$Screen == "off", ]$Coefficient), col="grey")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=1, col="blue")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "far" & m2$Screen == "off", ]$Coefficient), col="blue")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient), col="black")
points(m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=21, col="green")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="green")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient), col="grey")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=1, col="blue")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "far" & m2$Screen == "off", ]$Coefficient), col="blue")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient), col="black")
points(m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=21, col="green")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="green")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient), col="grey")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$max, pch=1, col="blue")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "far" & m2$Screen == "off", ]$Coefficient), col="blue")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient), col="black")
points(m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=21, col="green")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="green")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient), col="grey")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$max, pch=1, col="blue")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "far" & m2$Screen == "off", ]$Coefficient), col="blue")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient), col="black")
points(m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=21, col="green")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="green")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient), col="grey")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$max, pch=1, col="blue")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "far" & m2$Screen == "off", ]$Coefficient), col="blue")
legend(0.5, 42, c("close & on", "close & off", "far & on", "far & off"), pch = c(19, 21, 20, 1), col = c("black", "green", "grey", "blue"), text.col = c("black", "green", "grey", "blue"), title="Mic Distance & Pop Shield")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient), col="black")
points(m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$max, pch=21, col="green")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="green")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "on", ]$max ~ m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient), col="grey")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$max, pch=1, col="blue")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "off", ]$max ~ m2[m2$Distance == "far" & m2$Screen == "off", ]$Coefficient), col="blue")
legend(0.5, 42, c("close & on", "close & off", "far & on", "far & off"), pch = c(19, 21, 20, 1), col = c("black", "green", "grey", "blue"), text.col = c("black", "green", "grey", "blue"), title="Mic Distance & Pop Shield")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$min, pch=19, ylab = "min MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "on", ]$min ~ m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient), col="black")
points(m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$min, pch=21, col="green")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "off", ]$min ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="green")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$min, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "on", ]$min ~ m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient), col="grey")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$min, pch=1, col="blue")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "off", ]$min ~ m2[m2$Distance == "far" & m2$Screen == "off", ]$Coefficient), col="blue")
legend(0.5, 42, c("close & on", "close & off", "far & on", "far & off"), pch = c(19, 21, 20, 1), col = c("black", "green", "grey", "blue"), text.col = c("black", "green", "grey", "blue"), title="Mic Distance & Pop Shield")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$min, pch=19, ylab = "min MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "on", ]$min ~ m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient), col="black")
points(m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$min, pch=21, col="green")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "off", ]$min ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="green")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$min, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "on", ]$min ~ m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient), col="grey")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$min, pch=1, col="blue")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "off", ]$min ~ m2[m2$Distance == "far" & m2$Screen == "off", ]$Coefficient), col="blue")
legend(0.5, -42, c("close & on", "close & off", "far & on", "far & off"), pch = c(19, 21, 20, 1), col = c("black", "green", "grey", "blue"), text.col = c("black", "green", "grey", "blue"), title="Mic Distance & Pop Shield")
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$min, pch=19, ylab = "min MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "on", ]$min ~ m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient), col="black")
points(m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$min, pch=21, col="green")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "off", ]$min ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="green")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$min, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "on", ]$min ~ m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient), col="grey")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$min, pch=1, col="blue")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "off", ]$min ~ m2[m2$Distance == "far" & m2$Screen == "off", ]$Coefficient), col="blue")
legend(0.5, -42, c("close & on", "close & off", "far & on", "far & off"), pch = c(19, 21, 20, 1), col = c("black", "green", "grey", "blue"), text.col = c("black", "green", "grey", "blue"), title="Mic Distance & Pop Screen")
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient), col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
lines(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max,  col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient), col="grey")
legend(0.5, 42, c("close", "far"), pch = c(19, 20), col = c("black", "grey"), text.col = c("black", "grey"), title="Mic Distance")
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient), col="black")
lines(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max)
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient), col="grey")
legend(0.5, 42, c("close", "far"), pch = c(19, 20), col = c("black", "grey"), text.col = c("black", "grey"), title="Mic Distance")
library("swirl")
library("sworl")
library("swurl")
library("swirl")
install.packages("swirl")
library("swirl")
swirl()
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 4) ~ parent, galton)
lm(child ~ parent, galton)
lm(child ~ parent, data = galton)
regrline <- lm(child ~ parent, data = galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
exit
exit()
quit
quit
quit()
path <- "/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week 3/example_csv/"
setwd(path)
close_on <- read.csv("MFCCs_close_on.csv")
plot(close_on$max)
plot(close_on$maxPos, close_on$max)
plot(close_on$max, main="MFCC maximum values: microphone close, pop screen on", xlab = "coefficient", ylab = "maximum value")
plot(close_on$maxPos, close_on$max, main = "MFCC maximum value: microphone close, pop screen on", xlab = "position of maximum value (frames)", ylab = "maximum value")
plot(close_on$max, main="MFCC maximum values: microphone close, pop screen on", xlab = "coefficient", ylab = "maximum value", xlim=c(-12, 12), ylim=c(0-max(close_on$max), max(close_on$max)), pch=13)
plot(close_on$max, main="MFCC maximum values: microphone close, pop screen on", xlab = "coefficient", ylab = "maximum value", type="n")
text(close_on$max, labels=close_on$maxPos)
plot(close_on$maxPos, close_on$max, main = "MFCC maximum value: microphone close, pop screen on", xlab = "position of maximum value (frames)", ylab = "maximum value", type="n")
text(close_on$maxPos, close_on$max, labels=close_on$Coefficient)
plot(c(1, 3, 2))
abline(0, 1)
plot(close_on$max, main="MFCC maximum values: microphone close, pop screen on", xlab = "coefficient", ylab = "maximum value", pch=13)
abline(lm(close_on$max ~ close_on$Coefficient))
plot(close_on$maxPos, close_on$max, main = "MFCC maximum value: microphone close, pop screen on", xlab = "position of maximum value (frames)", ylab = "maximum value", type="n")
text(close_on$maxPos, close_on$max, labels=close_on$Coefficient)
abline(lm(close_on$max ~ close_on$maxPos))
lm(close_on$max ~ close_on$Coefficient)
lm(close_on$max ~ close_on$maxPos)
path <- "/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week 3/example_csv/"
setwd(path)
far_off <- read.csv("MFCCs_far_off.csv")
plot(close_on$maxPos, close_on$max, main = "MFCC maximum value", sub="close & screen on vs far & screen off", xlab = "position of maximum value (frames)", ylab = "maximum value", type="n", xlim=c(min(c(close_on$maxPos, far_off$maxPos)), c(max(c(close_on$maxPos, far_off$maxPos)))), ylim=c(min(c(close_on$max, far_off$max)), c(max(c(close_on$max, far_off$max)))))
text(close_on$maxPos, close_on$max, labels=close_on$Coefficient)
abline(lm(close_on$max ~ close_on$maxPos))
points(far_off$maxPos, far_off$max, type="n")
text(far_off$maxPos, far_off$max, labels=far_off$Coefficient, col="blue")
abline(lm(far_off$max ~ far_off$maxPos), col = "blue")
plot(close_on$maxPos, close_on$max, main = "MFCC maximum value", xlab = "position of maximum value (frames)", ylab = "maximum value", type="n", xlim=c(min(c(close_on$maxPos, far_off$maxPos)), c(max(c(close_on$maxPos, far_off$maxPos)))), ylim=c(min(c(close_on$max, far_off$max)), c(max(c(close_on$max, far_off$max)))))
text(close_on$maxPos, close_on$max, labels=close_on$Coefficient)
abline(lm(close_on$max ~ close_on$maxPos))
points(far_off$maxPos, far_off$max, type="n")
text(far_off$maxPos, far_off$max, labels=far_off$Coefficient, col="blue")
abline(lm(far_off$max ~ far_off$maxPos), col = "blue")
legend(320, 42, c("close & screen on", "far & screen off"), pch = 13, col = c("black", "blue"), text.col = c("black", "blue"))
plot(close_on$maxPos, close_on$max, main = "MFCC maximum value: microphone close, pop screen on", xlab = "position of maximum value (frames)", ylab = "maximum value", type="n")
text(close_on$maxPos, close_on$max, labels=close_on$Coefficient)
lines(close_on$maxPos, close_on$max)
hamming <- read.csv("/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week 3/example_csv/hamming.csv")
dotchart(hamming$Hamming.Distance, labels = hamming$Screen, groups=hamming$Distance, lcolor="purple", main="Microphone Placement", sub="grouped by physical distance", xlab="Hamming Distance", ylab="Pop Screen", xlim=c(0,max(hamming$Hamming.Distance)), pch=4, color="purple")
attach(mtcars) # Sample dataset for cars
head(mtcars) # Show the first 6 rows of mtcars
plot(mtcars$wt, mtcars$mpg, main = "Auto Fuel Efficiency vs. Weight",
xlab = "Weight (tons)", ylab = "Fuel Efficieny (Miles per Gallon)",
xlim = c(0, 6), ylim = c(0, 40), pch = 21)
abline(lm(mtcars$mpg ~ mtcars$wt), col = "blue")
mtcars_lm <- lm(mtcars$mpg ~ mtcars$wt)
summary(mtcars_lm)
sm_kbit = read.csv("/Volumes/data/Research/CDB/RA Didactics/Programming_Jan2017/Week 3/example_csv/SM_EEG_KBIT.csv")
names(sm_kbit)[names(sm_kbit) == "KBIT.Verbal.Standard.Score"] = "KBIT_Verbal"
names(sm_kbit)[names(sm_kbit) == "KBIT.Nonverbal.Standard.Score"] = "KBIT_Nonverbal"
names(sm_kbit)[names(sm_kbit) == "KBIT.IQ.Standard.Score"] = "KBIT_IQ"
t.test(sm_kbit$KBIT_Verbal ~ sm_kbit$SM_dx)
t.test(sm_kbit$KBIT_Verbal, sm_kbit$KBIT_Nonverbal, paired = TRUE) # Note: If the argument "paired" is not specified, it defaults to FALSE
boxplot(KBIT_Verbal ~ SM_dx, data = sm_kbit)
png(filename = "/Volumes/Data/Research/CDB/RA Didactics/Programming_Jan2017/Week 3/KBIT_boxplot_modified.png") # Specify where to save image as .png
boxplot(KBIT_Verbal ~ SM_dx, data = sm_kbit, main = "KBIT Verbal Scores",
xlab = "SM Diagnosis", ylab = "KBIT Verbal Score",
ylim = c(50, 150), col = c("#0067A0", "#919d9d"))
dev.off()
setwd(path)
mfccs <- read.csv("openSMILE_emobase_MFCCs.csv")
m2 <- cast(data=mfccs, formula = Distance + Screen + Coefficient ~ Functional)
distance_to_max <- aov(max ~ Distance, data=m2)
summary(distance_to_max)
plot(m2[m2$Distance == "close", ]$Coefficient, m2[m2$Distance == "close", ]$max, pch=19, ylab = "max MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close", ]$max ~ m2[m2$Distance == "close", ]$Coefficient), col="black")
points(m2[m2$Distance == "far", ]$Coefficient, m2[m2$Distance == "far", ]$max, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far", ]$max ~ m2[m2$Distance == "far", ]$Coefficient), col="grey")
legend(0.5, 42, c("close", "far"), pch = c(19, 20), col = c("black", "grey"), text.col = c("black", "grey"), title="Mic Distance")
plot(distance_to_max)
ds_to_min <- aov(max ~ Distance*Screen, data=m2)
summary(ds_to_min)
plot(m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "on", ]$min, pch=19, ylab = "min MFCC value", xlab="MFCC coefficient")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "on", ]$min ~ m2[m2$Distance == "close" & m2$Screen == "on", ]$Coefficient), col="black")
points(m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient, m2[m2$Distance == "close" & m2$Screen == "off", ]$min, pch=21, col="green")
abline(lm(m2[m2$Distance == "close" & m2$Screen == "off", ]$min ~ m2[m2$Distance == "close" & m2$Screen == "off", ]$Coefficient), col="green")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$min, pch=20, col="grey")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "on", ]$min ~ m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient), col="grey")
points(m2[m2$Distance == "far" & m2$Screen == "on", ]$Coefficient, m2[m2$Distance == "far" & m2$Screen == "off", ]$min, pch=1, col="blue")
abline(lm(m2[m2$Distance == "far" & m2$Screen == "off", ]$min ~ m2[m2$Distance == "far" & m2$Screen == "off", ]$Coefficient), col="blue")
legend(0.5, -42, c("close & on", "close & off", "far & on", "far & off"), pch = c(19, 21, 20, 1), col = c("black", "green", "grey", "blue"), text.col = c("black", "green", "grey", "blue"), title="Mic Distance & Pop Screen")
plot(ds_to_min)
plot(max ~ Distance, data=m2)
plot(max ~ maxPos, data=m2)
plot(max ~ maxPos, data=close_on)
abline(lm(max ~ maxPos, data=close_on))
sm_kbit = read.csv("/Volumes/data/Research/CDB/RA Didactics/Programming_Jan2017/Week 3/example_csv/SM_EEG_KBIT.csv")
names(sm_kbit)[names(sm_kbit) == "KBIT.Verbal.Standard.Score"] = "KBIT_Verbal"
names(sm_kbit)[names(sm_kbit) == "KBIT.Nonverbal.Standard.Score"] = "KBIT_Nonverbal"
names(sm_kbit)[names(sm_kbit) == "KBIT.IQ.Standard.Score"] = "KBIT_IQ"
View(sm_kbit)
